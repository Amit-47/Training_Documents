#######################
Day 14 : 07th Jan. 2025
#######################	


	Container Orchestration Tool : Kubernetes
	
	Kubernetes Architecture 
	
	Kubernetes Architecture Components
	
	Terminologies
	
	Kubernetes Concepts :
	
	Install and setup the Kubernetes Cluster
	
	Pods
	Controller Objects 
		- RC 
		- RS 
		- DS 
		- Deployments 
		
	Kubernetes Volumes 
	
	Kubernetes Services 
		- C-IP
		- NP 
		- LoadBalancer 
		
	HELM Package Manager!
	
	
Kubernetes Architecture :::

	Kubernetes ::::
	
		- It is a Open-Source Container Orchestration Tool 
		- Kubernetes is used to Deploy any type of Containers.
		- It is used to ensure high availability of the Applications/services running thru Containers.
		- Used to Ensure High Availability of Containers by creating Replicas of Containers.
		- It supports Auto-Scaling & Load Balancing.

	Managed Services :
	
	AWS 	- ECS/ECR/EKS
	Azure 	- ACS/ACR/AKS 
	GCP 	- GCE/GCR/GKE
	
	Kubernetes Architecture :::	
	
	Components ::
	
		Kubernetes Master
			Kubernetes WorkerNode1
			Kubernetes WorkerNode2
			Kubernetes WorkerNode3
			
		- API Server 
		- ETCD 
		- Scheduler
		- Controller Manager 
		
		- Kubelet 
		- CRI - Container RunTime Interface - Container-D 
		- Kube-Proxy
	
	Kubernetes Terminologies & Concepts ::
	
		--> Kubernetes Manifest File 			# Used to define the properties of the pods for deployment. - *.yaml / *.json
		
		--> kubectl								# Command Line Utility - used to interact with Kubernetes Master 
		
		--> Container Images
		
		--> Containers 
		
		--> Container Registry 
		
		--> Pods 								# Smallest / Atomic unit of task 
		
		--> Kubelet								# Kubernetes Agent responsible to deploy the pods 
		
		--> Kubernetes Cluster					# Kubernetes Cluster is the group of WorkerNodes.
		
		
		Kubernetes Master
			Kubernetes-Cluster1
				Kubernetes WorkerNode1
				Kubernetes WorkerNode2
				Kubernetes WorkerNode3
				
		Kubernetes Master
			Kubernetes-Cluster1
				Kubernetes WorkerNode1
				Kubernetes WorkerNode2
				Kubernetes WorkerNode3
			Kubernetes-Cluster2
				Kubernetes WorkerNode1
				Kubernetes WorkerNode2
				Kubernetes WorkerNode3
			Kubernetes-Cluster3
				Kubernetes WorkerNode1
				Kubernetes WorkerNode2
				Kubernetes WorkerNode3

			Kubernetes Master				
				Kubernetes Master1
					Kubernetes-Cluster1
						Kubernetes WorkerNode1
						Kubernetes WorkerNode2
						Kubernetes WorkerNode3
				Kubernetes Master2
					Kubernetes-Cluster1
						Kubernetes WorkerNode1
						Kubernetes WorkerNode2
						Kubernetes WorkerNode3
						
	Install and setup the Kubernetes Architecture ::::

		Kubernetes Master
			Kubernetes WorkerNode1
			Kubernetes WorkerNode2
			
			
	minikube 
	kubeadm 
	
		Kubernetes Master
			Kubernetes WorkerNode1
			Kubernetes WorkerNode2
			
			
	Create Manifest File to Deploy Kubernetes Objects like pods....
	
	
	Pods :::




#######################
Day 15 : 08th Jan. 2025
#######################	

Concepts :
	Pods
	Controller Objects 
		- RC 
		- RS 
		- DS 
		- Deployments 
		
	Kubernetes Volumes 
	
	Kubernetes Services 
		- C-IP
		- NP 
		- LoadBalancer 
		
	HELM Package Manager!	
	
	
	Controller Objects 
		- Replication Controller and Replicaset :::
		
			Both RC and RS are used to create replicas of Pods to ensure high availability of application service.
			It is used to execute specific no. of Pods Instances
			replica - 3 
			
			Replicaset is the enhanced version of Replication Controller
			
			RC - Used the Equal to based Operator 
				
				Pod 
				
					Envi=QA1
					Envi=QA2
					
			
			RS - Used the Set Based Operator
			
					Envi:{QA1,QA2}
					
			RS - Get created automatically when we create Deployment Objects.
			
			
			3 replicas pods :
			
				Scale-up 
				Scale-down 
				
				
		- DaemonSet :::
		
			- Used to Execute a copy of pod in all the available node 
			
			- Monitoring / Logger / reporting tool services
			
			- Whenever we add any new node to cluster, DaemonSet will allocate a pod in that node 
			
			
		- Deployment Controller Object :::

			- Used to Create Replicas of Pods 
			- Scale-up / Scale-down the Pod Instance 
			- Upgrade the Application Service 
			- Downgrade the Application Service 
			- Here, Upgrade & Downgrade can be done without any downtime.
			
			- Deployment Controller used Rolling-Update Strategy for Deployments
			
			- RS created automatically when we create Deployment Objects.
			
			Pods :
			
				Initial Version :::					New Version ::: 
				
				p1	-> v1.1								p1	-> v1.2	
				p2	-> v1.1							
				p3	-> v1.1
			
		
	Kubernetes Services :::
	
		- ClusterIP Service 
		- NodePort					30000 - 32767
		- LoadBalancer 
		
		
	Kubernetes Volumes 		:::
	
		- Used to maintain the persistant data.
		
		Types: 
		
			- hostpath Volume 			--> Same as Container Volume 
										--> This Volume will be create in the Node where the Pods are deployed 
			- configMaps Volume
			- Secret_Volumes
			
			- Persistant Volume &
			- Persistant Volume Claim
		
	
Next :

	- configMaps Volume
	- Secret_Volumes
	
	- Helm Charts 
	
	
Monitoring :::

	
	- Prometheus/Grafana
	
	
Terraform :::

CICD Pipeline 
		
